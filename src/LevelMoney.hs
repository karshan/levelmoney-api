{-# LANGUAGE BangPatterns, DeriveDataTypeable, DeriveGeneric, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC  -fno-warn-unused-imports #-}
module LevelMoney (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified GHC.Generics as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)

protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".LevelMoney\", haskellPrefix = [], parentModule = [], baseName = MName \"LevelMoney\"}, protoFilePath = [\"LevelMoney.hs\"], protoSource = \"LevelMoney.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.Events\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Events\"}, descFilePath = [\"LevelMoney\",\"Events.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Events.sensitive_token_expiration_time\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Events\"], baseName' = FName \"sensitive_token_expiration_time\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Events.insensitive_token_expiration_time\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Events\"], baseName' = FName \"insensitive_token_expiration_time\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Events.needs_reauth\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Events\"], baseName' = FName \"needs_reauth\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Events.popup_message\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Events\"], baseName' = FName \"popup_message\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Events.error_description\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Events\"], baseName' = FName \"error_description\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 82}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Events.invalidate_all_caches\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Events\"], baseName' = FName \"invalidate_all_caches\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 100}, wireTag = WireTag {getWireTag = 800}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Events.invalidate_everything_and_log_out\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Events\"], baseName' = FName \"invalidate_everything_and_log_out\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 101}, wireTag = WireTag {getWireTag = 808}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.AggErrorInfo\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"AggErrorInfo\"}, descFilePath = [\"LevelMoney\",\"AggErrorInfo.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AggErrorInfo.account_status_description\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AggErrorInfo\"], baseName' = FName \"account_status_description\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AggErrorInfo.error_status\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AggErrorInfo\"], baseName' = FName \"error_status\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.AggErrorStatus\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"AggErrorStatus\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AggErrorInfo.status_start_timestamp\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AggErrorInfo\"], baseName' = FName \"status_start_timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.Account\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Account\"}, descFilePath = [\"LevelMoney\",\"Account.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.account_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"account_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.account_name\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"account_name\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.account_type\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"account_type\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.AccountType\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"AccountType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.activating\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"activating\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 120}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.active\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"active\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.agg_error_info\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"agg_error_info\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 20}, wireTag = WireTag {getWireTag = 162}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.AggErrorInfo\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"AggErrorInfo\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.autosave_account_priority\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"autosave_account_priority\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 25}, wireTag = WireTag {getWireTag = 200}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.balance\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"balance\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.bank_needs_pin\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"bank_needs_pin\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 17}, wireTag = WireTag {getWireTag = 136}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.can_be_autosave_funding_source\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"can_be_autosave_funding_source\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 24}, wireTag = WireTag {getWireTag = 192}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.can_be_autosave_target\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"can_be_autosave_target\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 23}, wireTag = WireTag {getWireTag = 184}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.does_not_support_pending\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"does_not_support_pending\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 18}, wireTag = WireTag {getWireTag = 144}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.institution_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"institution_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.institution_login_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"institution_login_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 19}, wireTag = WireTag {getWireTag = 154}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.institution_name\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"institution_name\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.is_autosave_source\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"is_autosave_source\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 21}, wireTag = WireTag {getWireTag = 168}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.is_autosave_target\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"is_autosave_target\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 22}, wireTag = WireTag {getWireTag = 176}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.last_digits\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"last_digits\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.needs_mfa\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"needs_mfa\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 72}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.needs_reauth\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"needs_reauth\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.no_reauth_before\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"no_reauth_before\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.onboarding_finished\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"onboarding_finished\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 112}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.onboarding_started\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"onboarding_started\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 104}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Account.soft_delinked\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Account\"], baseName' = FName \"soft_delinked\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 128}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.ScheduledTransfer\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"ScheduledTransfer\"}, descFilePath = [\"LevelMoney\",\"ScheduledTransfer.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ScheduledTransfer.amount\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ScheduledTransfer\"], baseName' = FName \"amount\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ScheduledTransfer.cancellation_timestamp\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ScheduledTransfer\"], baseName' = FName \"cancellation_timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ScheduledTransfer.funding_account_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ScheduledTransfer\"], baseName' = FName \"funding_account_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ScheduledTransfer.is_cancellable\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ScheduledTransfer\"], baseName' = FName \"is_cancellable\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ScheduledTransfer.scheduled_timestamp\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ScheduledTransfer\"], baseName' = FName \"scheduled_timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ScheduledTransfer.scheduled_transfer_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ScheduledTransfer\"], baseName' = FName \"scheduled_transfer_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ScheduledTransfer.target_account_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ScheduledTransfer\"], baseName' = FName \"target_account_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ScheduledTransfer.transfer_status\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ScheduledTransfer\"], baseName' = FName \"transfer_status\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.TransferStatus\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"TransferStatus\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.AutosaveData\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"AutosaveData\"}, descFilePath = [\"LevelMoney\",\"AutosaveData.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AutosaveData.autosave_status\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AutosaveData\"], baseName' = FName \"autosave_status\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.AutosaveStatus\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"AutosaveStatus\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AutosaveData.funding_account_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AutosaveData\"], baseName' = FName \"funding_account_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 50}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AutosaveData.has_lulz_minimum_funding_account_balance\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AutosaveData\"], baseName' = FName \"has_lulz_minimum_funding_account_balance\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AutosaveData.has_lulz_savings_target_amount\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AutosaveData\"], baseName' = FName \"has_lulz_savings_target_amount\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AutosaveData.minimum_funding_account_balance\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AutosaveData\"], baseName' = FName \"minimum_funding_account_balance\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AutosaveData.past_scheduled_transfers\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AutosaveData\"], baseName' = FName \"past_scheduled_transfers\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 82}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.ScheduledTransfer\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"ScheduledTransfer\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AutosaveData.savings_target_amount\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AutosaveData\"], baseName' = FName \"savings_target_amount\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AutosaveData.scheduled_smansfer\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AutosaveData\"], baseName' = FName \"scheduled_smansfer\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.ScheduledTransfer\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"ScheduledTransfer\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AutosaveData.scheduled_withdrawal\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AutosaveData\"], baseName' = FName \"scheduled_withdrawal\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.ScheduledTransfer\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"ScheduledTransfer\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.AutosaveData.target_account_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"AutosaveData\"], baseName' = FName \"target_account_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.Transaction\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Transaction\"}, descFilePath = [\"LevelMoney\",\"Transaction.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.account_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"account_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.aggregation_time\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"aggregation_time\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 23}, wireTag = WireTag {getWireTag = 184}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.amount\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"amount\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.categorization\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"categorization\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 21}, wireTag = WireTag {getWireTag = 170}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.clear_date\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"clear_date\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 26}, wireTag = WireTag {getWireTag = 208}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.insight_ids\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"insight_ids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 17}, wireTag = WireTag {getWireTag = 138}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.is_pending\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"is_pending\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.is_transfer\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"is_transfer\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 112}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.memo_only_for_testing\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"memo_only_for_testing\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 24}, wireTag = WireTag {getWireTag = 194}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.merchant\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"merchant\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.original_amount\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"original_amount\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.original_merchant\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"original_merchant\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.original_transaction_time\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"original_transaction_time\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.paycheck_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"paycheck_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 128}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.payee_name_only_for_testing\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"payee_name_only_for_testing\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 25}, wireTag = WireTag {getWireTag = 202}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.possibly_is_bank_fee_maybe\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"possibly_is_bank_fee_maybe\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 104}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.previous_transaction_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"previous_transaction_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 18}, wireTag = WireTag {getWireTag = 146}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.raw_merchant\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"raw_merchant\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.target_fund_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"target_fund_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.target_is_goal\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"target_is_goal\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 96}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.transaction_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"transaction_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.transaction_time\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"transaction_time\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.transaction_time_string_read_only\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"transaction_time_string_read_only\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 22}, wireTag = WireTag {getWireTag = 178}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.transfer_partner_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"transfer_partner_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 122}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.user_json_data\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"user_json_data\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 20}, wireTag = WireTag {getWireTag = 162}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Transaction.user_note\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Transaction\"], baseName' = FName \"user_note\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 19}, wireTag = WireTag {getWireTag = 154}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.Bucket\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Bucket\"}, descFilePath = [\"LevelMoney\",\"Bucket.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.archetype_transactions\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"archetype_transactions\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 82}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Transaction\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Transaction\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.blacklisted_transaction_ids\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"blacklisted_transaction_ids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 98}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.bucket_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"bucket_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.bucket_type\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"bucket_type\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 32}, wireTag = WireTag {getWireTag = 256}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.BucketType\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"BucketType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.color\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"color\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 22}, wireTag = WireTag {getWireTag = 176}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.display_style\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"display_style\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 23}, wireTag = WireTag {getWireTag = 184}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.DisplayStyle\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"DisplayStyle\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.dummy\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"dummy\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.icon\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"icon\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 21}, wireTag = WireTag {getWireTag = 170}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.is_autogenerated\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"is_autogenerated\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 33}, wireTag = WireTag {getWireTag = 264}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.last_update_timestamp\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"last_update_timestamp\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.matched_predicted_transaction_ids\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"matched_predicted_transaction_ids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 114}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.matched_transaction_ids\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"matched_transaction_ids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 106}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.title\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"title\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 20}, wireTag = WireTag {getWireTag = 162}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Bucket.whitelisted_transaction_ids\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Bucket\"], baseName' = FName \"whitelisted_transaction_ids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 90}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.BucketedTransactionsCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"BucketedTransactionsCard\"}, descFilePath = [\"LevelMoney\",\"BucketedTransactionsCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.BucketedTransactionsCard.bucket_ids\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"BucketedTransactionsCard\"], baseName' = FName \"bucket_ids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.BucketedTransactionsCard.transaction_ids\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"BucketedTransactionsCard\"], baseName' = FName \"transaction_ids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.CancelledScheduledTransferCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"CancelledScheduledTransferCard\"}, descFilePath = [\"LevelMoney\",\"CancelledScheduledTransferCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CancelledScheduledTransferCard.scheduled_transfer_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CancelledScheduledTransferCard\"], baseName' = FName \"scheduled_transfer_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.ClearedScheduledTransferCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"ClearedScheduledTransferCard\"}, descFilePath = [\"LevelMoney\",\"ClearedScheduledTransferCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ClearedScheduledTransferCard.scheduled_transfer_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ClearedScheduledTransferCard\"], baseName' = FName \"scheduled_transfer_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ClearedScheduledTransferCard.source_transaction_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ClearedScheduledTransferCard\"], baseName' = FName \"source_transaction_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ClearedScheduledTransferCard.target_transaction_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ClearedScheduledTransferCard\"], baseName' = FName \"target_transaction_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.DisplayCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"DisplayCard\"}, descFilePath = [\"LevelMoney\",\"DisplayCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.DisplayCard.description\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"DisplayCard\"], baseName' = FName \"description\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.DisplayCard.display_type\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"DisplayCard\"], baseName' = FName \"display_type\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.DisplayType\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"DisplayType\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.ExplainerCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"ExplainerCard\"}, descFilePath = [\"LevelMoney\",\"ExplainerCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.ExplainerCard.explainer_type\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"ExplainerCard\"], baseName' = FName \"explainer_type\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.ExplainerType\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"ExplainerType\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.GenericTextCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"GenericTextCard\"}, descFilePath = [\"LevelMoney\",\"GenericTextCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.GenericTextCard.call_to_action_text\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"GenericTextCard\"], baseName' = FName \"call_to_action_text\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.GenericTextCard.call_to_action_url\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"GenericTextCard\"], baseName' = FName \"call_to_action_url\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.GenericTextCard.copy\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"GenericTextCard\"], baseName' = FName \"copy\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.GenericTextCard.header\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"GenericTextCard\"], baseName' = FName \"header\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.NormieCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"NormieCard\"}, descFilePath = [\"LevelMoney\",\"NormieCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.NormieCard.transaction_ids\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"NormieCard\"], baseName' = FName \"transaction_ids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.PendingScheduledTransferCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"PendingScheduledTransferCard\"}, descFilePath = [\"LevelMoney\",\"PendingScheduledTransferCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.PendingScheduledTransferCard.scheduled_transfer_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"PendingScheduledTransferCard\"], baseName' = FName \"scheduled_transfer_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.SuggestedAddToExistingBucketCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"SuggestedAddToExistingBucketCard\"}, descFilePath = [\"LevelMoney\",\"SuggestedAddToExistingBucketCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.SuggestedAddToExistingBucketCard.bucket_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"SuggestedAddToExistingBucketCard\"], baseName' = FName \"bucket_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.SuggestedAddToExistingBucketCard.transaction_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"SuggestedAddToExistingBucketCard\"], baseName' = FName \"transaction_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.SummaryCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"SummaryCard\"}, descFilePath = [\"LevelMoney\",\"SummaryCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.SummaryCard.active_bucket_ids\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"SummaryCard\"], baseName' = FName \"active_bucket_ids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.SummaryCard.highlighted_transaction_ids\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"SummaryCard\"], baseName' = FName \"highlighted_transaction_ids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 42}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.SummaryCard.total_bills\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"SummaryCard\"], baseName' = FName \"total_bills\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.SummaryCard.total_spending\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"SummaryCard\"], baseName' = FName \"total_spending\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.SummaryCard.total_transactions\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"SummaryCard\"], baseName' = FName \"total_transactions\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.TransferCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"TransferCard\"}, descFilePath = [\"LevelMoney\",\"TransferCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.TransferCard.transaction_ids\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"TransferCard\"], baseName' = FName \"transaction_ids\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.UpcomingScheduledTransferCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"UpcomingScheduledTransferCard\"}, descFilePath = [\"LevelMoney\",\"UpcomingScheduledTransferCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.UpcomingScheduledTransferCard.scheduled_transfer_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"UpcomingScheduledTransferCard\"], baseName' = FName \"scheduled_transfer_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.SuggestedTransactionCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"SuggestedTransactionCard\"}, descFilePath = [\"LevelMoney\",\"SuggestedTransactionCard.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.SuggestedTransactionCard.bucket\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"SuggestedTransactionCard\"], baseName' = FName \"bucket\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Bucket\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Bucket\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.SuggestedTransactionCard.transaction_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"SuggestedTransactionCard\"], baseName' = FName \"transaction_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.Card\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Card\"}, descFilePath = [\"LevelMoney\",\"Card.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.bucketed_transactions\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"bucketed_transactions\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 98}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.BucketedTransactionsCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"BucketedTransactionsCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.cancelled_scheduled_transfer\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"cancelled_scheduled_transfer\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 21}, wireTag = WireTag {getWireTag = 170}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.CancelledScheduledTransferCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"CancelledScheduledTransferCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.card_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"card_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.card_type\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"card_type\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.CardType\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"CardType\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.cleared_scheduled_transfer\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"cleared_scheduled_transfer\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 22}, wireTag = WireTag {getWireTag = 178}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.ClearedScheduledTransferCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"ClearedScheduledTransferCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.display\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"display\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 17}, wireTag = WireTag {getWireTag = 138}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.DisplayCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"DisplayCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.explainer\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"explainer\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 114}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.ExplainerCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"ExplainerCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.flags\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"flags\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Just (WireTag {getWireTag = 32},WireTag {getWireTag = 34}), wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = True, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.CardFlag\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"CardFlag\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.generic_text\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"generic_text\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 122}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.GenericTextCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"GenericTextCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.normie\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"normie\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 82}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.NormieCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"NormieCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.pending_scheduled_transfer\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"pending_scheduled_transfer\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 20}, wireTag = WireTag {getWireTag = 162}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.PendingScheduledTransferCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"PendingScheduledTransferCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.sort_order\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"sort_order\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.suggested_add_to_existing_bucket\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"suggested_add_to_existing_bucket\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 130}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.SuggestedAddToExistingBucketCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"SuggestedAddToExistingBucketCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.suggested_transaction\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"suggested_transaction\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 106}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.SuggestedTransactionCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"SuggestedTransactionCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.summary\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"summary\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 18}, wireTag = WireTag {getWireTag = 146}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.SummaryCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"SummaryCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.transfer\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"transfer\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 90}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.TransferCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"TransferCard\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Card.upcoming_scheduled_transfer\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Card\"], baseName' = FName \"upcoming_scheduled_transfer\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 19}, wireTag = WireTag {getWireTag = 154}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.UpcomingScheduledTransferCard\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"UpcomingScheduledTransferCard\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.FeatureFlags\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"FeatureFlags\"}, descFilePath = [\"LevelMoney\",\"FeatureFlags.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.FeatureFlags.is_smart_savings_enabled\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"FeatureFlags\"], baseName' = FName \"is_smart_savings_enabled\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.CacheContents\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"CacheContents\"}, descFilePath = [\"LevelMoney\",\"CacheContents.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CacheContents.accounts\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CacheContents\"], baseName' = FName \"accounts\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 20}, wireTag = WireTag {getWireTag = 162}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Account\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Account\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CacheContents.autosave_data\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CacheContents\"], baseName' = FName \"autosave_data\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 50}, wireTag = WireTag {getWireTag = 402}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.AutosaveData\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"AutosaveData\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CacheContents.buckets\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CacheContents\"], baseName' = FName \"buckets\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 22}, wireTag = WireTag {getWireTag = 178}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Bucket\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Bucket\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CacheContents.cards\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CacheContents\"], baseName' = FName \"cards\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 30}, wireTag = WireTag {getWireTag = 242}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Card\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Card\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CacheContents.features\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CacheContents\"], baseName' = FName \"features\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 40}, wireTag = WireTag {getWireTag = 322}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.FeatureFlags\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"FeatureFlags\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CacheContents.has_lulz_v3_spendable\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CacheContents\"], baseName' = FName \"has_lulz_v3_spendable\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 32}, wireTag = WireTag {getWireTag = 256}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CacheContents.projected_transactions\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CacheContents\"], baseName' = FName \"projected_transactions\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 23}, wireTag = WireTag {getWireTag = 186}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Transaction\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Transaction\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CacheContents.transactions\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CacheContents\"], baseName' = FName \"transactions\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 21}, wireTag = WireTag {getWireTag = 170}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Transaction\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Transaction\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CacheContents.transactions_cursor\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CacheContents\"], baseName' = FName \"transactions_cursor\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 24}, wireTag = WireTag {getWireTag = 192}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CacheContents.v3_spendable\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CacheContents\"], baseName' = FName \"v3_spendable\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 31}, wireTag = WireTag {getWireTag = 248}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.User\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"User\"}, descFilePath = [\"LevelMoney\",\"User.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.User.client_user_agent\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"User\"], baseName' = FName \"client_user_agent\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.UserAgent\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"UserAgent\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.User.client_version\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"User\"], baseName' = FName \"client_version\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.User.created\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"User\"], baseName' = FName \"created\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.User.email\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"User\"], baseName' = FName \"email\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.User.first_name\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"User\"], baseName' = FName \"first_name\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.User.has_lulz_autogenerated_insights\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"User\"], baseName' = FName \"has_lulz_autogenerated_insights\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.User.has_lulz_budget\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"User\"], baseName' = FName \"has_lulz_budget\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.User.last_name\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"User\"], baseName' = FName \"last_name\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.User.password\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"User\"], baseName' = FName \"password\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.User.phone_number\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"User\"], baseName' = FName \"phone_number\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 58}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.User.variabill_migrated\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"User\"], baseName' = FName \"variabill_migrated\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.FatLoginResponse\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"FatLoginResponse\"}, descFilePath = [\"LevelMoney\",\"FatLoginResponse.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.FatLoginResponse.error\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"FatLoginResponse\"], baseName' = FName \"error\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Error\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Error\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.FatLoginResponse.events\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"FatLoginResponse\"], baseName' = FName \"events\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Events\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Events\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.FatLoginResponse.error2\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"FatLoginResponse\"], baseName' = FName \"error2\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.FatLoginError\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"FatLoginError\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.FatLoginResponse.uid\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"FatLoginResponse\"], baseName' = FName \"uid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.FatLoginResponse.token\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"FatLoginResponse\"], baseName' = FName \"token\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 90}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.FatLoginResponse.cache_contents\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"FatLoginResponse\"], baseName' = FName \"cache_contents\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 98}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.CacheContents\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"CacheContents\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.FatLoginResponse.user\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"FatLoginResponse\"], baseName' = FName \"user\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 106}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.User\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"User\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.CallerInfo\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"CallerInfo\"}, descFilePath = [\"LevelMoney\",\"CallerInfo.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CallerInfo.os_version_string\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CallerInfo\"], baseName' = FName \"os_version_string\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CallerInfo.user_agent\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CallerInfo\"], baseName' = FName \"user_agent\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.UserAgent\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"UserAgent\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CallerInfo.version\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CallerInfo\"], baseName' = FName \"version\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.CallerInfo.version_string\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"CallerInfo\"], baseName' = FName \"version_string\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.Args\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Args\"}, descFilePath = [\"LevelMoney\",\"Args.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.api_token\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"api_token\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 98}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.caller_info\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"caller_info\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 74}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.CallerInfo\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"CallerInfo\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.demo_mode\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"demo_mode\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 32}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.device_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"device_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 122}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.json_args\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"json_args\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 66}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.json_strict_mode\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"json_strict_mode\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 112}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.json_verbose_response\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"json_verbose_response\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 128}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.masquerade_as\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"masquerade_as\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 56}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.time\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"time\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 104}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.time_zone\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"time_zone\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 85}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.time_zone_string\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"time_zone_string\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 90}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.token\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"token\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.uid\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"uid\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 3}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.Args.user_has_pin\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"Args\"], baseName' = FName \"user_has_pin\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 40}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.GetCacheContentsRequest\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"GetCacheContentsRequest\"}, descFilePath = [\"LevelMoney\",\"GetCacheContentsRequest.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.GetCacheContentsRequest.args\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"GetCacheContentsRequest\"], baseName' = FName \"args\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Args\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Args\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.GetCacheContentsRequest.card_version\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"GetCacheContentsRequest\"], baseName' = FName \"card_version\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.LoginRequest\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"LoginRequest\"}, descFilePath = [\"LevelMoney\",\"LoginRequest.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.LoginRequest.args\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"LoginRequest\"], baseName' = FName \"args\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Args\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Args\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.LoginRequest.card_version\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"LoginRequest\"], baseName' = FName \"card_version\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 96}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 5}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.LoginRequest.device_id\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"LoginRequest\"], baseName' = FName \"device_id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.LoginRequest.email\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"LoginRequest\"], baseName' = FName \"email\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.LoginRequest.password\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"LoginRequest\"], baseName' = FName \"password\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".LevelMoney.GetCacheContentsResponse\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"GetCacheContentsResponse\"}, descFilePath = [\"LevelMoney\",\"GetCacheContentsResponse.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.GetCacheContentsResponse.cache_contents\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"GetCacheContentsResponse\"], baseName' = FName \"cache_contents\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 34}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.CacheContents\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"CacheContents\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.GetCacheContentsResponse.error\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"GetCacheContentsResponse\"], baseName' = FName \"error\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Error\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Error\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.GetCacheContentsResponse.error2\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"GetCacheContentsResponse\"], baseName' = FName \"error2\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.GetCacheContentsError\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"GetCacheContentsError\"}), hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".LevelMoney.GetCacheContentsResponse.events\", haskellPrefix' = [], parentModule' = [MName \"LevelMoney\",MName \"GetCacheContentsResponse\"], baseName' = FName \"events\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".LevelMoney.Events\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Events\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = True, lazyFields = False, makeLenses = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.Error\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"Error\"}, enumFilePath = [\"LevelMoney\",\"Error.hs\"], enumValues = [(EnumCode {getEnumCode = -1},\"UNKNOWN_ERROR\"),(EnumCode {getEnumCode = 0},\"NO_ERROR\"),(EnumCode {getEnumCode = 300},\"NO_TOKEN\"),(EnumCode {getEnumCode = 301},\"TOKEN_EXPIRED\"),(EnumCode {getEnumCode = 302},\"INSUFFICIENT_TOKEN_SENSITIVITY\"),(EnumCode {getEnumCode = 303},\"NO_API_TOKEN\"),(EnumCode {getEnumCode = 304},\"BAD_API_TOKEN\"),(EnumCode {getEnumCode = 305},\"ILLEGAL_PATH\"),(EnumCode {getEnumCode = 306},\"REQUEST_SCHEMA_MISMATCH\"),(EnumCode {getEnumCode = 307},\"STRICT_MODE_FAILURE\"),(EnumCode {getEnumCode = 500},\"LOCK_FAILURE\"),(EnumCode {getEnumCode = 700},\"NOT_IMPLEMENTED_YET\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.FatLoginError\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"FatLoginError\"}, enumFilePath = [\"LevelMoney\",\"FatLoginError.hs\"], enumValues = [(EnumCode {getEnumCode = -1},\"UNKNOWN_ERROR_FATLOGIN\"),(EnumCode {getEnumCode = 0},\"NO_ERROR_FATLOGIN\"),(EnumCode {getEnumCode = 1},\"SOME_ERROR\"),(EnumCode {getEnumCode = 2},\"NO_DEMO_ACCOUNTS\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.AccountType\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"AccountType\"}, enumFilePath = [\"LevelMoney\",\"AccountType.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"UNRECOGNIZED\"),(EnumCode {getEnumCode = 1},\"ASSET\"),(EnumCode {getEnumCode = 2},\"CREDIT_CARD\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.AggErrorStatus\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"AggErrorStatus\"}, enumFilePath = [\"LevelMoney\",\"AggErrorStatus.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"UNKNOWN_AGG\"),(EnumCode {getEnumCode = 1},\"NO_ERROR_AGG\"),(EnumCode {getEnumCode = 2},\"UNHEALTHY\"),(EnumCode {getEnumCode = 3},\"I_SENSE_A_DISTURBANCE\"),(EnumCode {getEnumCode = 4},\"CLOSED\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.TransferStatus\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"TransferStatus\"}, enumFilePath = [\"LevelMoney\",\"TransferStatus.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"UNKNOWN_STATUS\"),(EnumCode {getEnumCode = 1},\"UNKNOWN_FAILURE\"),(EnumCode {getEnumCode = 2},\"SCHEDULED\"),(EnumCode {getEnumCode = 3},\"PENDING\"),(EnumCode {getEnumCode = 4},\"CLEARED\"),(EnumCode {getEnumCode = 5},\"CANCELLED_DUE_TO_INSUFFICIENT_FUNDS\"),(EnumCode {getEnumCode = 6},\"CANCELLED_BY_USER\"),(EnumCode {getEnumCode = 7},\"CANCELLED_BY_LEVEL\"),(EnumCode {getEnumCode = 8},\"CANCELLED_BY_BANK\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.AutosaveStatus\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"AutosaveStatus\"}, enumFilePath = [\"LevelMoney\",\"AutosaveStatus.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"NOT_SET_UP\"),(EnumCode {getEnumCode = 1},\"ACTIVE\"),(EnumCode {getEnumCode = 2},\"PAUSED\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.BucketType\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"BucketType\"}, enumFilePath = [\"LevelMoney\",\"BucketType.hs\"], enumValues = [(EnumCode {getEnumCode = -1},\"UNKNOWN_BUCKET\"),(EnumCode {getEnumCode = 0},\"LEGACY_INSIGHT\"),(EnumCode {getEnumCode = 1},\"BILL\"),(EnumCode {getEnumCode = 3},\"MAGIC_DONT_COUNT\"),(EnumCode {getEnumCode = 5},\"DEBIT_INSIGHT\"),(EnumCode {getEnumCode = 6},\"CREDIT_INSIGHT\"),(EnumCode {getEnumCode = 7},\"RECURRING_INCOME\"),(EnumCode {getEnumCode = 8},\"MAGIC_TRANSFER\"),(EnumCode {getEnumCode = 9},\"MAGIC_SAVINGS\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.DisplayStyle\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"DisplayStyle\"}, enumFilePath = [\"LevelMoney\",\"DisplayStyle.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"MONTH_TO_MONTH\"),(EnumCode {getEnumCode = 2},\"ALL_TIME\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.CardType\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"CardType\"}, enumFilePath = [\"LevelMoney\",\"CardType.hs\"], enumValues = [(EnumCode {getEnumCode = -1},\"UNKNOWN_CARD\"),(EnumCode {getEnumCode = 1},\"NORMIES\"),(EnumCode {getEnumCode = 2},\"TRANSFER\"),(EnumCode {getEnumCode = 3},\"BUCKETED_TRANSACTIONS\"),(EnumCode {getEnumCode = 4},\"SUGGESTED_TRANSACTION\"),(EnumCode {getEnumCode = 7},\"EXPLAINER\"),(EnumCode {getEnumCode = 8},\"ADJUST_SPENDABLE\"),(EnumCode {getEnumCode = 9},\"GENERIC_TEXT\"),(EnumCode {getEnumCode = 10},\"SUGGESTED_ADD_TO_EXISTING_BUCKET\"),(EnumCode {getEnumCode = 11},\"DISPLAY\"),(EnumCode {getEnumCode = 12},\"SUMMARY\"),(EnumCode {getEnumCode = 13},\"UPCOMING_SMANSFER\"),(EnumCode {getEnumCode = 14},\"PENDING_SMANSFER\"),(EnumCode {getEnumCode = 15},\"CANCELLED_SMANSFER\"),(EnumCode {getEnumCode = 16},\"CLEARED_SMANSFER\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.DisplayType\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"DisplayType\"}, enumFilePath = [\"LevelMoney\",\"DisplayType.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"NEW_MONTH\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.ExplainerType\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"ExplainerType\"}, enumFilePath = [\"LevelMoney\",\"ExplainerType.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"WELCOME\"),(EnumCode {getEnumCode = 2},\"RENAME_ACCOUNTS\"),(EnumCode {getEnumCode = 4},\"DONT_COUNT\"),(EnumCode {getEnumCode = 5},\"ICONS\"),(EnumCode {getEnumCode = 6},\"TRACKERS\"),(EnumCode {getEnumCode = 7},\"ENABLE_AUTOSAVE\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.CardFlag\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"CardFlag\"}, enumFilePath = [\"LevelMoney\",\"CardFlag.hs\"], enumValues = [(EnumCode {getEnumCode = -1},\"UNKNOWN_FLAG\"),(EnumCode {getEnumCode = 1},\"DISMISSED\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.UserAgent\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"UserAgent\"}, enumFilePath = [\"LevelMoney\",\"UserAgent.hs\"], enumValues = [(EnumCode {getEnumCode = 1},\"UNSPECIFIED\"),(EnumCode {getEnumCode = 2},\"IPHONE\"),(EnumCode {getEnumCode = 3},\"ANDROID\"),(EnumCode {getEnumCode = 4},\"WEB\"),(EnumCode {getEnumCode = 5},\"CONSOLE\"),(EnumCode {getEnumCode = 6},\"GOOGLE_GLASS\"),(EnumCode {getEnumCode = 7},\"ANDROID_WEAR\"),(EnumCode {getEnumCode = 8},\"IWATCH\"),(EnumCode {getEnumCode = 9},\"SKYNET\"),(EnumCode {getEnumCode = 10},\"TOASTER\"),(EnumCode {getEnumCode = 11},\"BLACKBERRY\"),(EnumCode {getEnumCode = 12},\"WINDOWS_PHONE\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".LevelMoney.GetCacheContentsError\", haskellPrefix = [], parentModule = [MName \"LevelMoney\"], baseName = MName \"GetCacheContentsError\"}, enumFilePath = [\"LevelMoney\",\"GetCacheContentsError.hs\"], enumValues = [(EnumCode {getEnumCode = -1},\"UNKNOWN_ERROR_GETCACHE\"),(EnumCode {getEnumCode = 0},\"NO_ERROR_GETCACHE\")]}], oneofs = [], knownKeyMap = fromList []}"

fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\180C\n\DLELevelMoney.proto\"\238\SOH\n\ACKEvents\DC2'\n\USsensitive_token_expiration_time\CAN\SOH \SOH(\ETX\DC2)\n!insensitive_token_expiration_time\CAN\STX \SOH(\ETX\DC2\DC4\n\fneeds_reauth\CAN\ETX \SOH(\b\DC2\NAK\n\rpopup_message\CAN\t \SOH(\t\DC2\EM\n\DC1error_description\CAN\n \SOH(\t\DC2\GS\n\NAKinvalidate_all_caches\CANd \SOH(\b\DC2)\n!invalidate_everything_and_log_out\CANe \SOH(\b\"\132\SOH\n\fAggErrorInfo\DC2\"\n\SUBaccount_status_description\CAN\STX \SOH(\t\DC20\n\ferror_status\CAN\SOH \SOH(\SO2\SUB.LevelMoney.AggErrorStatus\DC2\RS\n\SYNstatus_start_timestamp\CAN\ETX \SOH(\ETX\"\158\ENQ\n\aAccount\DC2\DC2\n\naccount_id\CAN\SOH \SOH(\t\DC2\DC4\n\faccount_name\CAN\ENQ \SOH(\t\DC2-\n\faccount_type\CAN\a \SOH(\SO2\ETB.LevelMoney.AccountType\DC2\DC2\n\nactivating\CAN\SI \SOH(\b\DC2\SO\n\ACKactive\CAN\EOT \SOH(\b\DC20\n\SOagg_error_info\CAN\DC4 \SOH(\v2\CAN.LevelMoney.AggErrorInfo\DC2!\n\EMautosave_account_priority\CAN\EM \SOH(\ETX\DC2\SI\n\abalance\CAN\ACK \SOH(\ETX\DC2\SYN\n\SObank_needs_pin\CAN\DC1 \SOH(\b\DC2&\n\RScan_be_autosave_funding_source\CAN\CAN \SOH(\b\DC2\RS\n\SYNcan_be_autosave_target\CAN\ETB \SOH(\b\DC2 \n\CANdoes_not_support_pending\CAN\DC2 \SOH(\b\DC2\SYN\n\SOinstitution_id\CAN\STX \SOH(\ETX\DC2\FS\n\DC4institution_login_id\CAN\DC3 \SOH(\t\DC2\CAN\n\DLEinstitution_name\CAN\ETX \SOH(\t\DC2\SUB\n\DC2is_autosave_source\CAN\NAK \SOH(\b\DC2\SUB\n\DC2is_autosave_target\CAN\SYN \SOH(\b\DC2\DC3\n\vlast_digits\CAN\b \SOH(\t\DC2\DC1\n\tneeds_mfa\CAN\t \SOH(\b\DC2\DC4\n\fneeds_reauth\CAN\n \SOH(\b\DC2\CAN\n\DLEno_reauth_before\CAN\v \SOH(\ETX\DC2\ESC\n\DC3onboarding_finished\CAN\SO \SOH(\b\DC2\SUB\n\DC2onboarding_started\CAN\r \SOH(\b\DC2\NAK\n\rsoft_delinked\CAN\DLE \SOH(\b\"\131\STX\n\DC1ScheduledTransfer\DC2\SO\n\ACKamount\CAN\ACK \SOH(\ETX\DC2\RS\n\SYNcancellation_timestamp\CAN\ENQ \SOH(\ETX\DC2\SUB\n\DC2funding_account_id\CAN\STX \SOH(\t\DC2\SYN\n\SOis_cancellable\CAN\a \SOH(\b\DC2\ESC\n\DC3scheduled_timestamp\CAN\EOT \SOH(\ETX\DC2\GS\n\NAKscheduled_transfer_id\CAN\SOH \SOH(\t\DC2\EM\n\DC1target_account_id\CAN\ETX \SOH(\t\DC23\n\SItransfer_status\CAN\b \SOH(\SO2\SUB.LevelMoney.TransferStatus\"\213\ETX\n\fAutosaveData\DC23\n\SIautosave_status\CAN\SOH \SOH(\SO2\SUB.LevelMoney.AutosaveStatus\DC2\SUB\n\DC2funding_account_id\CAN\ACK \SOH(\t\DC20\n(has_lulz_minimum_funding_account_balance\CAN\EOT \SOH(\b\DC2&\n\RShas_lulz_savings_target_amount\CAN\STX \SOH(\b\DC2'\n\USminimum_funding_account_balance\CAN\ENQ \SOH(\ETX\DC2?\n\CANpast_scheduled_transfers\CAN\n \ETX(\v2\GS.LevelMoney.ScheduledTransfer\DC2\GS\n\NAKsavings_target_amount\CAN\ETX \SOH(\ETX\DC29\n\DC2scheduled_smansfer\CAN\b \SOH(\v2\GS.LevelMoney.ScheduledTransfer\DC2;\n\DC4scheduled_withdrawal\CAN\t \SOH(\v2\GS.LevelMoney.ScheduledTransfer\DC2\EM\n\DC1target_account_id\CAN\a \SOH(\t\"\167\ENQ\n\vTransaction\DC2\DC2\n\naccount_id\CAN\STX \SOH(\t\DC2\CAN\n\DLEaggregation_time\CAN\ETB \SOH(\ETX\DC2\SO\n\ACKamount\CAN\a \SOH(\ETX\DC2\SYN\n\SOcategorization\CAN\NAK \SOH(\t\DC2\DC2\n\nclear_date\CAN\SUB \SOH(\ETX\DC2\DC3\n\vinsight_ids\CAN\DC1 \ETX(\t\DC2\DC2\n\nis_pending\CAN\ENQ \SOH(\b\DC2\DC3\n\vis_transfer\CAN\SO \SOH(\b\DC2\GS\n\NAKmemo_only_for_testing\CAN\CAN \SOH(\t\DC2\DLE\n\bmerchant\CAN\EOT \SOH(\t\DC2\ETB\n\SIoriginal_amount\CAN\n \SOH(\ETX\DC2\EM\n\DC1original_merchant\CAN\t \SOH(\t\DC2!\n\EMoriginal_transaction_time\CAN\v \SOH(\ETX\DC2\DC3\n\vpaycheck_id\CAN\DLE \SOH(\ETX\DC2#\n\ESCpayee_name_only_for_testing\CAN\EM \SOH(\t\DC2\"\n\SUBpossibly_is_bank_fee_maybe\CAN\r \SOH(\b\DC2\US\n\ETBprevious_transaction_id\CAN\DC2 \SOH(\t\DC2\DC4\n\fraw_merchant\CAN\ETX \SOH(\t\DC2\SYN\n\SOtarget_fund_id\CAN\b \SOH(\ETX\DC2\SYN\n\SOtarget_is_goal\CAN\f \SOH(\b\DC2\SYN\n\SOtransaction_id\CAN\SOH \SOH(\t\DC2\CAN\n\DLEtransaction_time\CAN\ACK \SOH(\ETX\DC2)\n!transaction_time_string_read_only\CAN\SYN \SOH(\t\DC2\ESC\n\DC3transfer_partner_id\CAN\SI \SOH(\t\DC2\SYN\n\SOuser_json_data\CAN\DC4 \SOH(\t\DC2\DC1\n\tuser_note\CAN\DC3 \SOH(\t\"\188\ETX\n\ACKBucket\DC27\n\SYNarchetype_transactions\CAN\n \ETX(\v2\ETB.LevelMoney.Transaction\DC2#\n\ESCblacklisted_transaction_ids\CAN\f \ETX(\t\DC2\DC1\n\tbucket_id\CAN\t \SOH(\t\DC2+\n\vbucket_type\CAN  \SOH(\SO2\SYN.LevelMoney.BucketType\DC2\r\n\ENQcolor\CAN\SYN \SOH(\ENQ\DC2/\n\rdisplay_style\CAN\ETB \SOH(\SO2\CAN.LevelMoney.DisplayStyle\DC2\r\n\ENQdummy\CAN\SOH \SOH(\b\DC2\f\n\EOTicon\CAN\NAK \SOH(\t\DC2\CAN\n\DLEis_autogenerated\CAN! \SOH(\b\DC2\GS\n\NAKlast_update_timestamp\CAN\STX \SOH(\ETX\DC2)\n!matched_predicted_transaction_ids\CAN\SO \ETX(\t\DC2\US\n\ETBmatched_transaction_ids\CAN\r \ETX(\t\DC2\r\n\ENQtitle\CAN\DC4 \SOH(\t\DC2#\n\ESCwhitelisted_transaction_ids\CAN\v \ETX(\t\"G\n\CANBucketedTransactionsCard\DC2\DC2\n\nbucket_ids\CAN\STX \ETX(\t\DC2\ETB\n\SItransaction_ids\CAN\SOH \ETX(\t\"?\n\RSCancelledScheduledTransferCard\DC2\GS\n\NAKscheduled_transfer_id\CAN\SOH \SOH(\t\"{\n\FSClearedScheduledTransferCard\DC2\GS\n\NAKscheduled_transfer_id\CAN\SOH \SOH(\t\DC2\GS\n\NAKsource_transaction_id\CAN\STX \SOH(\t\DC2\GS\n\NAKtarget_transaction_id\CAN\ETX \SOH(\t\"Q\n\vDisplayCard\DC2\DC3\n\vdescription\CAN\STX \SOH(\t\DC2-\n\fdisplay_type\CAN\SOH \SOH(\SO2\ETB.LevelMoney.DisplayType\"B\n\rExplainerCard\DC21\n\SOexplainer_type\CAN\SOH \SOH(\SO2\EM.LevelMoney.ExplainerType\"h\n\SIGenericTextCard\DC2\ESC\n\DC3call_to_action_text\CAN\ETX \SOH(\t\DC2\SUB\n\DC2call_to_action_url\CAN\EOT \SOH(\t\DC2\f\n\EOTcopy\CAN\STX \SOH(\t\DC2\SO\n\ACKheader\CAN\SOH \SOH(\t\"%\n\nNormieCard\DC2\ETB\n\SItransaction_ids\CAN\SOH \ETX(\t\"=\n\FSPendingScheduledTransferCard\DC2\GS\n\NAKscheduled_transfer_id\CAN\SOH \SOH(\t\"M\n SuggestedAddToExistingBucketCard\DC2\DC1\n\tbucket_id\CAN\STX \SOH(\t\DC2\SYN\n\SOtransaction_id\CAN\SOH \SOH(\t\"\150\SOH\n\vSummaryCard\DC2\EM\n\DC1active_bucket_ids\CAN\EOT \ETX(\t\DC2#\n\ESChighlighted_transaction_ids\CAN\ENQ \ETX(\t\DC2\DC3\n\vtotal_bills\CAN\STX \SOH(\ETX\DC2\SYN\n\SOtotal_spending\CAN\SOH \SOH(\ETX\DC2\SUB\n\DC2total_transactions\CAN\ETX \SOH(\ETX\"'\n\fTransferCard\DC2\ETB\n\SItransaction_ids\CAN\SOH \ETX(\t\">\n\GSUpcomingScheduledTransferCard\DC2\GS\n\NAKscheduled_transfer_id\CAN\SOH \SOH(\t\"V\n\CANSuggestedTransactionCard\DC2\"\n\ACKbucket\CAN\STX \SOH(\v2\DC2.LevelMoney.Bucket\DC2\SYN\n\SOtransaction_id\CAN\SOH \SOH(\t\"\162\a\n\EOTCard\DC2C\n\NAKbucketed_transactions\CAN\f \SOH(\v2$.LevelMoney.BucketedTransactionsCard\DC2P\n\FScancelled_scheduled_transfer\CAN\NAK \SOH(\v2*.LevelMoney.CancelledScheduledTransferCard\DC2\SI\n\acard_id\CAN\SOH \SOH(\t\DC2'\n\tcard_type\CAN\ETX \SOH(\SO2\DC4.LevelMoney.CardType\DC2L\n\SUBcleared_scheduled_transfer\CAN\SYN \SOH(\v2(.LevelMoney.ClearedScheduledTransferCard\DC2(\n\adisplay\CAN\DC1 \SOH(\v2\ETB.LevelMoney.DisplayCard\DC2,\n\texplainer\CAN\SO \SOH(\v2\EM.LevelMoney.ExplainerCard\DC2#\n\ENQflags\CAN\EOT \ETX(\SO2\DC4.LevelMoney.CardFlag\DC21\n\fgeneric_text\CAN\SI \SOH(\v2\ESC.LevelMoney.GenericTextCard\DC2&\n\ACKnormie\CAN\n \SOH(\v2\SYN.LevelMoney.NormieCard\DC2L\n\SUBpending_scheduled_transfer\CAN\DC4 \SOH(\v2(.LevelMoney.PendingScheduledTransferCard\DC2\DC2\n\nsort_order\CAN\STX \SOH(\ETX\DC2V\n suggested_add_to_existing_bucket\CAN\DLE \SOH(\v2,.LevelMoney.SuggestedAddToExistingBucketCard\DC2C\n\NAKsuggested_transaction\CAN\r \SOH(\v2$.LevelMoney.SuggestedTransactionCard\DC2(\n\asummary\CAN\DC2 \SOH(\v2\ETB.LevelMoney.SummaryCard\DC2*\n\btransfer\CAN\v \SOH(\v2\CAN.LevelMoney.TransferCard\DC2N\n\ESCupcoming_scheduled_transfer\CAN\DC3 \SOH(\v2).LevelMoney.UpcomingScheduledTransferCard\"0\n\fFeatureFlags\DC2 \n\CANis_smart_savings_enabled\CAN\SOH \SOH(\b\"\147\ETX\n\rCacheContents\DC2%\n\baccounts\CAN\DC4 \ETX(\v2\DC3.LevelMoney.Account\DC2/\n\rautosave_data\CAN2 \SOH(\v2\CAN.LevelMoney.AutosaveData\DC2#\n\abuckets\CAN\SYN \ETX(\v2\DC2.LevelMoney.Bucket\DC2\US\n\ENQcards\CAN\RS \ETX(\v2\DLE.LevelMoney.Card\DC2*\n\bfeatures\CAN( \SOH(\v2\CAN.LevelMoney.FeatureFlags\DC2\GS\n\NAKhas_lulz_v3_spendable\CAN  \SOH(\b\DC27\n\SYNprojected_transactions\CAN\ETB \ETX(\v2\ETB.LevelMoney.Transaction\DC2-\n\ftransactions\CAN\NAK \ETX(\v2\ETB.LevelMoney.Transaction\DC2\ESC\n\DC3transactions_cursor\CAN\CAN \SOH(\ETX\DC2\DC4\n\fv3_spendable\CAN\US \SOH(\ETX\"\157\STX\n\EOTUser\DC20\n\DC1client_user_agent\CAN\n \SOH(\SO2\NAK.LevelMoney.UserAgent\DC2\SYN\n\SOclient_version\CAN\v \SOH(\ETX\DC2\SI\n\acreated\CAN\EOT \SOH(\ETX\DC2\r\n\ENQemail\CAN\SOH \SOH(\t\DC2\DC2\n\nfirst_name\CAN\b \SOH(\t\DC2'\n\UShas_lulz_autogenerated_insights\CAN\ACK \SOH(\b\DC2\ETB\n\SIhas_lulz_budget\CAN\ETX \SOH(\b\DC2\DC1\n\tlast_name\CAN\t \SOH(\t\DC2\DLE\n\bpassword\CAN\STX \SOH(\t\DC2\DC4\n\fphone_number\CAN\a \SOH(\t\DC2\SUB\n\DC2variabill_migrated\CAN\ENQ \SOH(\b\"\242\SOH\n\DLEFatLoginResponse\DC2 \n\ENQerror\CAN\SOH \SOH(\SO2\DC1.LevelMoney.Error\DC2\"\n\ACKevents\CAN\STX \SOH(\v2\DC2.LevelMoney.Events\DC2)\n\ACKerror2\CAN\ETX \SOH(\SO2\EM.LevelMoney.FatLoginError\DC2\v\n\ETXuid\CAN\n \SOH(\ETX\DC2\r\n\ENQtoken\CAN\v \SOH(\t\DC21\n\SOcache_contents\CAN\f \SOH(\v2\EM.LevelMoney.CacheContents\DC2\RS\n\EOTuser\CAN\r \SOH(\v2\DLE.LevelMoney.User\"{\n\nCallerInfo\DC2\EM\n\DC1os_version_string\CAN\EOT \SOH(\t\DC2)\n\nuser_agent\CAN\SOH \SOH(\SO2\NAK.LevelMoney.UserAgent\DC2\SI\n\aversion\CAN\STX \SOH(\ETX\DC2\SYN\n\SOversion_string\CAN\ETX \SOH(\t\"\188\STX\n\EOTArgs\DC2\DC1\n\tapi_token\CAN\f \SOH(\t\DC2+\n\vcaller_info\CAN\t \SOH(\v2\SYN.LevelMoney.CallerInfo\DC2\DC1\n\tdemo_mode\CAN\EOT \SOH(\b\DC2\DC1\n\tdevice_id\CAN\SI \SOH(\t\DC2\DC1\n\tjson_args\CAN\b \SOH(\t\DC2\CAN\n\DLEjson_strict_mode\CAN\SO \SOH(\b\DC2\GS\n\NAKjson_verbose_response\CAN\DLE \SOH(\b\DC2\NAK\n\rmasquerade_as\CAN\a \SOH(\ETX\DC2\f\n\EOTtime\CAN\r \SOH(\ETX\DC2\DC1\n\ttime_zone\CAN\n \SOH(\STX\DC2\CAN\n\DLEtime_zone_string\CAN\v \SOH(\t\DC2\r\n\ENQtoken\CAN\STX \SOH(\t\DC2\v\n\ETXuid\CAN\SOH \SOH(\ETX\DC2\DC4\n\fuser_has_pin\CAN\ENQ \SOH(\b\"O\n\ETBGetCacheContentsRequest\DC2\RS\n\EOTargs\CAN\SOH \SOH(\v2\DLE.LevelMoney.Args\DC2\DC4\n\fcard_version\CAN\STX \SOH(\ENQ\"x\n\fLoginRequest\DC2\RS\n\EOTargs\CAN\ETX \SOH(\v2\DLE.LevelMoney.Args\DC2\DC4\n\fcard_version\CAN\f \SOH(\ENQ\DC2\DC1\n\tdevice_id\CAN\EOT \SOH(\t\DC2\r\n\ENQemail\CAN\SOH \SOH(\t\DC2\DLE\n\bpassword\CAN\STX \SOH(\t\"\198\SOH\n\CANGetCacheContentsResponse\DC21\n\SOcache_contents\CAN\EOT \SOH(\v2\EM.LevelMoney.CacheContents\DC2 \n\ENQerror\CAN\SOH \SOH(\SO2\DC1.LevelMoney.Error\DC21\n\ACKerror2\CAN\ETX \SOH(\SO2!.LevelMoney.GetCacheContentsError\DC2\"\n\ACKevents\CAN\STX \SOH(\v2\DC2.LevelMoney.Events*\152\STX\n\ENQError\DC2\SUB\n\rUNKNOWN_ERROR\DLE\255\255\255\255\255\255\255\255\255\SOH\DC2\f\n\bNO_ERROR\DLE\NUL\DC2\r\n\bNO_TOKEN\DLE\172\STX\DC2\DC2\n\rTOKEN_EXPIRED\DLE\173\STX\DC2#\n\RSINSUFFICIENT_TOKEN_SENSITIVITY\DLE\174\STX\DC2\DC1\n\fNO_API_TOKEN\DLE\175\STX\DC2\DC2\n\rBAD_API_TOKEN\DLE\176\STX\DC2\DC1\n\fILLEGAL_PATH\DLE\177\STX\DC2\FS\n\ETBREQUEST_SCHEMA_MISMATCH\DLE\178\STX\DC2\CAN\n\DC3STRICT_MODE_FAILURE\DLE\179\STX\DC2\DC1\n\fLOCK_FAILURE\DLE\244\ETX\DC2\CAN\n\DC3NOT_IMPLEMENTED_YET\DLE\188\ENQ*q\n\rFatLoginError\DC2#\n\SYNUNKNOWN_ERROR_FATLOGIN\DLE\255\255\255\255\255\255\255\255\255\SOH\DC2\NAK\n\DC1NO_ERROR_FATLOGIN\DLE\NUL\DC2\SO\n\nSOME_ERROR\DLE\SOH\DC2\DC4\n\DLENO_DEMO_ACCOUNTS\DLE\STX*;\n\vAccountType\DC2\DLE\n\fUNRECOGNIZED\DLE\NUL\DC2\t\n\ENQASSET\DLE\SOH\DC2\SI\n\vCREDIT_CARD\DLE\STX*i\n\SOAggErrorStatus\DC2\SI\n\vUNKNOWN_AGG\DLE\NUL\DC2\DLE\n\fNO_ERROR_AGG\DLE\SOH\DC2\r\n\tUNHEALTHY\DLE\STX\DC2\EM\n\NAKI_SENSE_A_DISTURBANCE\DLE\ETX\DC2\n\n\ACKCLOSED\DLE\EOT*\209\SOH\n\SOTransferStatus\DC2\DC2\n\SOUNKNOWN_STATUS\DLE\NUL\DC2\DC3\n\SIUNKNOWN_FAILURE\DLE\SOH\DC2\r\n\tSCHEDULED\DLE\STX\DC2\v\n\aPENDING\DLE\ETX\DC2\v\n\aCLEARED\DLE\EOT\DC2'\n#CANCELLED_DUE_TO_INSUFFICIENT_FUNDS\DLE\ENQ\DC2\NAK\n\DC1CANCELLED_BY_USER\DLE\ACK\DC2\SYN\n\DC2CANCELLED_BY_LEVEL\DLE\a\DC2\NAK\n\DC1CANCELLED_BY_BANK\DLE\b*8\n\SOAutosaveStatus\DC2\SO\n\nNOT_SET_UP\DLE\NUL\DC2\n\n\ACKACTIVE\DLE\SOH\DC2\n\n\ACKPAUSED\DLE\STX*\193\SOH\n\nBucketType\DC2\ESC\n\SOUNKNOWN_BUCKET\DLE\255\255\255\255\255\255\255\255\255\SOH\DC2\DC2\n\SOLEGACY_INSIGHT\DLE\NUL\DC2\b\n\EOTBILL\DLE\SOH\DC2\DC4\n\DLEMAGIC_DONT_COUNT\DLE\ETX\DC2\DC1\n\rDEBIT_INSIGHT\DLE\ENQ\DC2\DC2\n\SOCREDIT_INSIGHT\DLE\ACK\DC2\DC4\n\DLERECURRING_INCOME\DLE\a\DC2\DC2\n\SOMAGIC_TRANSFER\DLE\b\DC2\DC1\n\rMAGIC_SAVINGS\DLE\t*0\n\fDisplayStyle\DC2\DC2\n\SOMONTH_TO_MONTH\DLE\SOH\DC2\f\n\bALL_TIME\DLE\STX*\200\STX\n\bCardType\DC2\EM\n\fUNKNOWN_CARD\DLE\255\255\255\255\255\255\255\255\255\SOH\DC2\v\n\aNORMIES\DLE\SOH\DC2\f\n\bTRANSFER\DLE\STX\DC2\EM\n\NAKBUCKETED_TRANSACTIONS\DLE\ETX\DC2\EM\n\NAKSUGGESTED_TRANSACTION\DLE\EOT\DC2\r\n\tEXPLAINER\DLE\a\DC2\DC4\n\DLEADJUST_SPENDABLE\DLE\b\DC2\DLE\n\fGENERIC_TEXT\DLE\t\DC2$\n SUGGESTED_ADD_TO_EXISTING_BUCKET\DLE\n\DC2\v\n\aDISPLAY\DLE\v\DC2\v\n\aSUMMARY\DLE\f\DC2\NAK\n\DC1UPCOMING_SMANSFER\DLE\r\DC2\DC4\n\DLEPENDING_SMANSFER\DLE\SO\DC2\SYN\n\DC2CANCELLED_SMANSFER\DLE\SI\DC2\DC4\n\DLECLEARED_SMANSFER\DLE\DLE*\FS\n\vDisplayType\DC2\r\n\tNEW_MONTH\DLE\SOH*o\n\rExplainerType\DC2\v\n\aWELCOME\DLE\SOH\DC2\DC3\n\SIRENAME_ACCOUNTS\DLE\STX\DC2\SO\n\nDONT_COUNT\DLE\EOT\DC2\t\n\ENQICONS\DLE\ENQ\DC2\f\n\bTRACKERS\DLE\ACK\DC2\DC3\n\SIENABLE_AUTOSAVE\DLE\a*4\n\bCardFlag\DC2\EM\n\fUNKNOWN_FLAG\DLE\255\255\255\255\255\255\255\255\255\SOH\DC2\r\n\tDISMISSED\DLE\SOH*\183\SOH\n\tUserAgent\DC2\SI\n\vUNSPECIFIED\DLE\SOH\DC2\n\n\ACKIPHONE\DLE\STX\DC2\v\n\aANDROID\DLE\ETX\DC2\a\n\ETXWEB\DLE\EOT\DC2\v\n\aCONSOLE\DLE\ENQ\DC2\DLE\n\fGOOGLE_GLASS\DLE\ACK\DC2\DLE\n\fANDROID_WEAR\DLE\a\DC2\n\n\ACKIWATCH\DLE\b\DC2\n\n\ACKSKYNET\DLE\t\DC2\v\n\aTOASTER\DLE\n\DC2\SO\n\nBLACKBERRY\DLE\v\DC2\DC1\n\rWINDOWS_PHONE\DLE\f*S\n\NAKGetCacheContentsError\DC2#\n\SYNUNKNOWN_ERROR_GETCACHE\DLE\255\255\255\255\255\255\255\255\255\SOH\DC2\NAK\n\DC1NO_ERROR_GETCACHE\DLE\NUL")