-- Generated by protobuf-simple. DO NOT EDIT!
module FatLoginResponse.Card where

import Control.Applicative ((<$>))
import Prelude ()
import qualified Data.ProtoBufInt as PB
import qualified FatLoginResponse.BucketedTransactionsCard
import qualified FatLoginResponse.CancelledScheduledTransferCard
import qualified FatLoginResponse.CardType
import qualified FatLoginResponse.ClearedScheduledTransferCard
import qualified FatLoginResponse.DisplayCard
import qualified FatLoginResponse.ExplainerCard
import qualified FatLoginResponse.CardFlag
import qualified FatLoginResponse.GenericTextCard
import qualified FatLoginResponse.NormieCard
import qualified FatLoginResponse.PendingScheduledTransferCard
import qualified FatLoginResponse.SuggestedAddToExistingBucketCard
import qualified FatLoginResponse.SuggestedTransactionCard
import qualified FatLoginResponse.SummaryCard
import qualified FatLoginResponse.TransferCard
import qualified FatLoginResponse.UpcomingScheduledTransferCard

data Card = Card
  { bucketedTransactions :: !(PB.Maybe FatLoginResponse.BucketedTransactionsCard.BucketedTransactionsCard)
  , cancelledScheduledTransfer :: !(PB.Maybe FatLoginResponse.CancelledScheduledTransferCard.CancelledScheduledTransferCard)
  , cardId :: !(PB.Maybe PB.Text)
  , cardType :: !(PB.Maybe FatLoginResponse.CardType.CardType)
  , clearedScheduledTransfer :: !(PB.Maybe FatLoginResponse.ClearedScheduledTransferCard.ClearedScheduledTransferCard)
  , display :: !(PB.Maybe FatLoginResponse.DisplayCard.DisplayCard)
  , explainer :: !(PB.Maybe FatLoginResponse.ExplainerCard.ExplainerCard)
  , flags :: !(PB.Seq FatLoginResponse.CardFlag.CardFlag)
  , genericText :: !(PB.Maybe FatLoginResponse.GenericTextCard.GenericTextCard)
  , normie :: !(PB.Maybe FatLoginResponse.NormieCard.NormieCard)
  , pendingScheduledTransfer :: !(PB.Maybe FatLoginResponse.PendingScheduledTransferCard.PendingScheduledTransferCard)
  , sortOrder :: !(PB.Maybe PB.Int64)
  , suggestedAddToExistingBucket :: !(PB.Maybe FatLoginResponse.SuggestedAddToExistingBucketCard.SuggestedAddToExistingBucketCard)
  , suggestedTransaction :: !(PB.Maybe FatLoginResponse.SuggestedTransactionCard.SuggestedTransactionCard)
  , summary :: !(PB.Maybe FatLoginResponse.SummaryCard.SummaryCard)
  , transfer :: !(PB.Maybe FatLoginResponse.TransferCard.TransferCard)
  , upcomingScheduledTransfer :: !(PB.Maybe FatLoginResponse.UpcomingScheduledTransferCard.UpcomingScheduledTransferCard)
  } deriving (PB.Show, PB.Eq, PB.Ord)

instance PB.Default Card where
  defaultVal = Card
    { bucketedTransactions = PB.defaultVal
    , cancelledScheduledTransfer = PB.defaultVal
    , cardId = PB.defaultVal
    , cardType = PB.defaultVal
    , clearedScheduledTransfer = PB.defaultVal
    , display = PB.defaultVal
    , explainer = PB.defaultVal
    , flags = PB.defaultVal
    , genericText = PB.defaultVal
    , normie = PB.defaultVal
    , pendingScheduledTransfer = PB.defaultVal
    , sortOrder = PB.defaultVal
    , suggestedAddToExistingBucket = PB.defaultVal
    , suggestedTransaction = PB.defaultVal
    , summary = PB.defaultVal
    , transfer = PB.defaultVal
    , upcomingScheduledTransfer = PB.defaultVal
    }

instance PB.Mergeable Card where
  merge a b = Card
    { bucketedTransactions = PB.merge (bucketedTransactions a) (bucketedTransactions b)
    , cancelledScheduledTransfer = PB.merge (cancelledScheduledTransfer a) (cancelledScheduledTransfer b)
    , cardId = PB.merge (cardId a) (cardId b)
    , cardType = PB.merge (cardType a) (cardType b)
    , clearedScheduledTransfer = PB.merge (clearedScheduledTransfer a) (clearedScheduledTransfer b)
    , display = PB.merge (display a) (display b)
    , explainer = PB.merge (explainer a) (explainer b)
    , flags = PB.merge (flags a) (flags b)
    , genericText = PB.merge (genericText a) (genericText b)
    , normie = PB.merge (normie a) (normie b)
    , pendingScheduledTransfer = PB.merge (pendingScheduledTransfer a) (pendingScheduledTransfer b)
    , sortOrder = PB.merge (sortOrder a) (sortOrder b)
    , suggestedAddToExistingBucket = PB.merge (suggestedAddToExistingBucket a) (suggestedAddToExistingBucket b)
    , suggestedTransaction = PB.merge (suggestedTransaction a) (suggestedTransaction b)
    , summary = PB.merge (summary a) (summary b)
    , transfer = PB.merge (transfer a) (transfer b)
    , upcomingScheduledTransfer = PB.merge (upcomingScheduledTransfer a) (upcomingScheduledTransfer b)
    }

instance PB.Required Card where
  reqTags _ = PB.fromList []

instance PB.WireMessage Card where
  fieldToValue (PB.WireTag 12 PB.LenDelim) self = (\v -> self{bucketedTransactions = PB.merge (bucketedTransactions self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 21 PB.LenDelim) self = (\v -> self{cancelledScheduledTransfer = PB.merge (cancelledScheduledTransfer self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 1 PB.LenDelim) self = (\v -> self{cardId = PB.merge (cardId self) v}) <$> PB.getStringOpt
  fieldToValue (PB.WireTag 3 PB.LenDelim) self = (\v -> self{cardType = PB.merge (cardType self) v}) <$> PB.getEnumOpt
  fieldToValue (PB.WireTag 22 PB.LenDelim) self = (\v -> self{clearedScheduledTransfer = PB.merge (clearedScheduledTransfer self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 17 PB.LenDelim) self = (\v -> self{display = PB.merge (display self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 14 PB.LenDelim) self = (\v -> self{explainer = PB.merge (explainer self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 4 PB.LenDelim) self = (\v -> self{flags = PB.append (flags self) v}) <$> PB.getEnum
  fieldToValue (PB.WireTag 15 PB.LenDelim) self = (\v -> self{genericText = PB.merge (genericText self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 10 PB.LenDelim) self = (\v -> self{normie = PB.merge (normie self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 20 PB.LenDelim) self = (\v -> self{pendingScheduledTransfer = PB.merge (pendingScheduledTransfer self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 2 PB.VarInt) self = (\v -> self{sortOrder = PB.merge (sortOrder self) v}) <$> PB.getInt64Opt
  fieldToValue (PB.WireTag 16 PB.LenDelim) self = (\v -> self{suggestedAddToExistingBucket = PB.merge (suggestedAddToExistingBucket self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 13 PB.LenDelim) self = (\v -> self{suggestedTransaction = PB.merge (suggestedTransaction self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 18 PB.LenDelim) self = (\v -> self{summary = PB.merge (summary self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 11 PB.LenDelim) self = (\v -> self{transfer = PB.merge (transfer self) v}) <$> PB.getMessageOpt
  fieldToValue (PB.WireTag 19 PB.LenDelim) self = (\v -> self{upcomingScheduledTransfer = PB.merge (upcomingScheduledTransfer self) v}) <$> PB.getMessageOpt
  fieldToValue tag self = PB.getUnknown tag self

  messageToFields self = do
    PB.putMessageOpt (PB.WireTag 12 PB.LenDelim) (bucketedTransactions self)
    PB.putMessageOpt (PB.WireTag 21 PB.LenDelim) (cancelledScheduledTransfer self)
    PB.putStringOpt (PB.WireTag 1 PB.LenDelim) (cardId self)
    PB.putEnumOpt (PB.WireTag 3 PB.LenDelim) (cardType self)
    PB.putMessageOpt (PB.WireTag 22 PB.LenDelim) (clearedScheduledTransfer self)
    PB.putMessageOpt (PB.WireTag 17 PB.LenDelim) (display self)
    PB.putMessageOpt (PB.WireTag 14 PB.LenDelim) (explainer self)
    PB.putEnumList (PB.WireTag 4 PB.LenDelim) (flags self)
    PB.putMessageOpt (PB.WireTag 15 PB.LenDelim) (genericText self)
    PB.putMessageOpt (PB.WireTag 10 PB.LenDelim) (normie self)
    PB.putMessageOpt (PB.WireTag 20 PB.LenDelim) (pendingScheduledTransfer self)
    PB.putInt64Opt (PB.WireTag 2 PB.VarInt) (sortOrder self)
    PB.putMessageOpt (PB.WireTag 16 PB.LenDelim) (suggestedAddToExistingBucket self)
    PB.putMessageOpt (PB.WireTag 13 PB.LenDelim) (suggestedTransaction self)
    PB.putMessageOpt (PB.WireTag 18 PB.LenDelim) (summary self)
    PB.putMessageOpt (PB.WireTag 11 PB.LenDelim) (transfer self)
    PB.putMessageOpt (PB.WireTag 19 PB.LenDelim) (upcomingScheduledTransfer self)


