-- Generated by protobuf-simple. DO NOT EDIT!
module FatLoginResponse.Events where

import Control.Applicative ((<$>))
import Prelude ()
import qualified Data.ProtoBufInt as PB

data Events = Events
  { sensitiveTokenExpirationTime :: !(PB.Maybe PB.Int64)
  , insensitiveTokenExpirationTime :: !(PB.Maybe PB.Int64)
  , needsReauth :: !(PB.Maybe PB.Bool)
  , popupMessage :: !(PB.Maybe PB.Text)
  , errorDescription :: !(PB.Maybe PB.Text)
  , invalidateAllCaches :: !(PB.Maybe PB.Bool)
  , invalidateEverythingAndLogOut :: !(PB.Maybe PB.Bool)
  } deriving (PB.Show, PB.Eq, PB.Ord)

instance PB.Default Events where
  defaultVal = Events
    { sensitiveTokenExpirationTime = PB.defaultVal
    , insensitiveTokenExpirationTime = PB.defaultVal
    , needsReauth = PB.defaultVal
    , popupMessage = PB.defaultVal
    , errorDescription = PB.defaultVal
    , invalidateAllCaches = PB.defaultVal
    , invalidateEverythingAndLogOut = PB.defaultVal
    }

instance PB.Mergeable Events where
  merge a b = Events
    { sensitiveTokenExpirationTime = PB.merge (sensitiveTokenExpirationTime a) (sensitiveTokenExpirationTime b)
    , insensitiveTokenExpirationTime = PB.merge (insensitiveTokenExpirationTime a) (insensitiveTokenExpirationTime b)
    , needsReauth = PB.merge (needsReauth a) (needsReauth b)
    , popupMessage = PB.merge (popupMessage a) (popupMessage b)
    , errorDescription = PB.merge (errorDescription a) (errorDescription b)
    , invalidateAllCaches = PB.merge (invalidateAllCaches a) (invalidateAllCaches b)
    , invalidateEverythingAndLogOut = PB.merge (invalidateEverythingAndLogOut a) (invalidateEverythingAndLogOut b)
    }

instance PB.Required Events where
  reqTags _ = PB.fromList []

instance PB.WireMessage Events where
  fieldToValue (PB.WireTag 1 PB.VarInt) self = (\v -> self{sensitiveTokenExpirationTime = PB.merge (sensitiveTokenExpirationTime self) v}) <$> PB.getInt64Opt
  fieldToValue (PB.WireTag 2 PB.VarInt) self = (\v -> self{insensitiveTokenExpirationTime = PB.merge (insensitiveTokenExpirationTime self) v}) <$> PB.getInt64Opt
  fieldToValue (PB.WireTag 3 PB.VarInt) self = (\v -> self{needsReauth = PB.merge (needsReauth self) v}) <$> PB.getBoolOpt
  fieldToValue (PB.WireTag 9 PB.LenDelim) self = (\v -> self{popupMessage = PB.merge (popupMessage self) v}) <$> PB.getStringOpt
  fieldToValue (PB.WireTag 10 PB.LenDelim) self = (\v -> self{errorDescription = PB.merge (errorDescription self) v}) <$> PB.getStringOpt
  fieldToValue (PB.WireTag 100 PB.VarInt) self = (\v -> self{invalidateAllCaches = PB.merge (invalidateAllCaches self) v}) <$> PB.getBoolOpt
  fieldToValue (PB.WireTag 101 PB.VarInt) self = (\v -> self{invalidateEverythingAndLogOut = PB.merge (invalidateEverythingAndLogOut self) v}) <$> PB.getBoolOpt
  fieldToValue tag self = PB.getUnknown tag self

  messageToFields self = do
    PB.putInt64Opt (PB.WireTag 1 PB.VarInt) (sensitiveTokenExpirationTime self)
    PB.putInt64Opt (PB.WireTag 2 PB.VarInt) (insensitiveTokenExpirationTime self)
    PB.putBoolOpt (PB.WireTag 3 PB.VarInt) (needsReauth self)
    PB.putStringOpt (PB.WireTag 9 PB.LenDelim) (popupMessage self)
    PB.putStringOpt (PB.WireTag 10 PB.LenDelim) (errorDescription self)
    PB.putBoolOpt (PB.WireTag 100 PB.VarInt) (invalidateAllCaches self)
    PB.putBoolOpt (PB.WireTag 101 PB.VarInt) (invalidateEverythingAndLogOut self)


